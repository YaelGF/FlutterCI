name: CI
on:
  push:
    branches:
      - main
jobs:
  flutter_test:
    name: Run flutter test and analize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      
  build_ios: 
    name: Build Flutter (iOS)
    needs: flutter_test
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build ios --release
      - name: Upload iPA
        uses: actions/upload-artifact@v2
        with:
          name: ios-build
          path: build/app/ios-relase.ipa
      
  build_appbundle: 
    name: Build Flutter (Android)
    runs-on: ubuntu-latest
    needs: flutter_test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter pub get
      - run: flutter clean
      - run: flutter build appbundle

      - uses: actions/upload-artifact@master
        with:
          name: apk-build
          path: build/app/app-relase.apk
      
  relase:
    name: Create a Release APK
    runs-on: ubuntu-latest
    needs: [build_appbundle]
    env: 
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        with:
          assets: build/app/app-relase.apk
          release_id: ${{ github.event.release.id }}
          release_name: Release ${{ github.sha }}
          tag_name: ${{ github.sha }}
          draft: false
          prerelease: false
          token: ${{ secrets.TOKEN }}
